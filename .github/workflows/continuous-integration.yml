name: CI

on:
  push:
    branches: [main]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  schedule:
    - cron: '0 2 * * 1' # At 02:00 on Monday

env:
  NODE_OPTIONS: --max-old-space-size=4096

jobs:
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: 'javascript'
        config-file: ./.github/codeql/codeql-config.yml

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  test:
    name: Test
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14, 16]
        include:
          - os: macos-latest
            node-version: 14 # LTS
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Bootstrap project
        run: |
          npm ci --ignore-scripts
          npm run postinstall
      - name: Build project
        run: npm run build
      - name: Run tests
        run: npm test --ignore-scripts

  cf-deployment-test:
    name: Cloud Foundry Deployment Test
    runs-on: ubuntu-latest
    steps:
      - uses: engineerd/setup-kind@v0.5.0
        with:
          name: kubecf
      - name: Test Deployment
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
      - name: Clone KubeCF Git Repo
        run: git clone --depth=1 https://github.com/cloudfoundry-incubator/kubecf.git

      - name: Download cf-operator and KubeCF Helm Charts Bundle
        run: |
          curl -s https://api.github.com/repos/cloudfoundry-incubator/kubecf/releases/latest \
            | grep -oP '"browser_download_url": "\K(.*)kubecf-bundle(.*)(?=")' \
            | wget -qi -
            tar xf kubecf-bundle-v*.tgz

      - name: Install KubeCF Required Tools
        run: |
          pushd ./kubecf
            make -I ./kubecf tools-install
          popd

      - name: Install cf-operator
        run: |
          kubectl create ns cfo
          helm install cf-operator \
            --namespace cfo \
            --set "global.singleNamespace.name=kubecf" \
            ./cf-operator.tgz
          kubectl wait \
            --namespace cfo \
            --for=condition=ready pod \
            --timeout=30m \
            --all
      - name: Install KubeCF
        run: |
          # Configure KubeCF with Node IP address
          node_ip=$(kubectl get node kubecf-control-plane \
            --output jsonpath='{ .status.addresses[?(@.type == "InternalIP")].address }')
          cat << _EOF_  > values.yaml
          system_domain: ${node_ip}.nip.io
          services:
            router:
              externalIPs:
              - ${node_ip}
          _EOF_

          # Trust the kubernetes root CA on the kind docker container:
          docker exec -t "kubecf-control-plane" bash -c 'cp /etc/kubernetes/pki/ca.crt /etc/ssl/certs/ && \
            update-ca-certificates && \
            (systemctl list-units | grep containerd > /dev/null && systemctl restart containerd)'

          # Install KubeCF
          helm install kubecf \
            --namespace kubecf \
            --values values.yaml \
            ./kubecf_release.tgz

  code-lint:
    name: Code Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Bootstrap project
        run: |
          npm ci --ignore-scripts
          npm run postinstall
      - name: Build project
        run: npm run build
      - name: Verify code linting
        run: npm run lint
      # - name: Verify package metadata
      #   run: npm run check-package-metadata

  commit-lint:
    name: Commit Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install monorepo tools
        run: |
          npm ci --ignore-scripts
      - name: Verify commit linting
        run: npx --no-install commitlint --from origin/main --to HEAD --verbose

  ci-lint:
    name: CI Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install monorepo tools
        run: |
          npm ci --ignore-scripts
      - name: Verify Renovate config linting
        run: npx --no-install renovate-config-validator

  license-lint:
    name: License Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v1
